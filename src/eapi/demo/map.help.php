<?php
/**
 * 第三方API接口调用配置
 * --------------------
 * # 参数设置
 * - 不设置的参数需要制定为`NULL`或不添加元素, 设置为''空字符串代表自定义了值.
 * - 群组api配置时, 尽量不要使用`url`参数, 会增加逻辑复杂度. 除非它们URL一致, 只是参数类型不同.
 */
return [
    /* [接口host值别名/域名别名]
     * ---------------------
     * 方便快速管理和更滑接口域名
     * - api地址始终等于url+path
     * - URL别名命名时必须带上最少一个`_`底横杠作为标识,
     * 即 `_com` , `_com_`, `com_` 都是合法的, 它们代表3个不同别名,
     * 因为`-`是域名唯一支持的符号, _标识用于触发别名转换.
     * - url值的设置可使用完整的别名也可以进行拼接,
     * ```
     * 例如`_abc_` => 'abc.com',
     * host => 'www._abc_' 解析为 `www.abc.com`
     * host => 'zone._abc_' 解析为 `zone.abc.com`
     * ```
     */
    '__url_alias__' => [
        '_souhu_'  => 'sohu.com',
    ],
    'pv_sohu_cityjson' => [
        'https' => false, // 协议类型, {false:'http', true:'https'}
        'host'  => 'pv._souhu_', // api域名不带协议, 可使用别名
        'path'  => '/cityjson', // api路径, 以`/`开头
        'url'   => '', // api完整URL地址带协议, 不带查询参数, 设置后将无视https,host,path属性值.
        
        /* 子接口组
         * --------
         * 可公用父作用域的属性
         * - 子接口可单独设置参数, 未设采用公共属性, 自身属性优先
         * - 子接口的参数未设置时应为`null`而不是空字符串, 否则认为设置了值.
         * - 子接口目前仅不共用`param`参数, 需单独指定参数, 但是可用字符串参数名来映射父参数值.
         */
        'group' => [
            
            // 接口标识, 方便调用, 需唯一, 即`pv_sohu_cityjson.sub1`
            'sub1'  => [
                //-- 可单独设置进行覆盖 --//
                'https' => false,
                'host'  => null,
                'path'  => null,
                'url'   => null,
                //---------------------//
                
                'param' => [
                    'ie'    => 'ie', // 字符串类型, 将会去上级'param'查找配置
                ],
            ],
        ],
        
        /* [请求参数/查询参数] (array)
         * - 格式 `参数名 => 参数规则`
         * # 参数规则
         * - `name` : [可选] (string) 参数的真实名称
         * - `set` : [必须] (bool) 是否是必选参数
         *           默认`false`可选, 未指定`default`默认值时, 将忽略该参数.
         *           值为`true`必选, 缺少参数将抛出异常或返回false.
         * - `default` : [必须] 默认值, 不指定值时, 需设置为`null`而不是空字符串.
         */
        'param' => [
            //
            'ie'    => [
                /* [是否是必选参数] (bool)
                 * --------------------
                 * - false : 可选, 未指定默认值时, 将忽略该参数.
                 */
                'set'       => false,
                'default'   => 'utf-8', // (string) 参数默认值
            ],
        ],
        /* [返回类型] 可选, 未设置将直接返回结果
         * 将返回的数据转换为数组格式
         * 预设解析方式:
         * - `json` : 纯json数据
         * - `var_json` : js代码变量赋值json的形式.`var name={..};`
         * --------------
         * - string : 预设的解析方式名称, 或者正则
         * - callable : 闭包方法, 自行处理
         */
        'return_type'       => 'json', // 设置返回类型
        'return_charset'    => 'utf-8', // 不转换可设置为空字符串, 设置的值不等于`utf-8`将会进行转换
        'return_content'    => null, // 如果设置将不触发请求, 直接返回, 可用于拦截, 便于维护接口.
    ],
];